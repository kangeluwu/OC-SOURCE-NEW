var bg;
var broke;
var stageFront;
var stagecurtains;
var color;

var loki2;
var loki;
var bgPast;
var stageFrontPast;
var stagecurtainsPast;
function start(song) {
PlayState.isCorruptUI = true;
    bg = new FlxSprite(-300, -200).loadGraphic(hscriptPath + 'Eyes_Assets.png');
    bg.scrollFactor.set(0.7, 0.7);
    bg.antialiasing = true;
    addSprite(bg, BEHIND_ALL);

    broke = new FlxSprite(-300, -200);
    var bgtex = FlxAtlasFrames.fromSparrow(hscriptPath + 'Deathmatch_Stage_ASsets.png', hscriptPath + 'Deathmatch_Stage_ASsets.xml');
    broke.frames = bgtex;
    broke.animation.addByPrefix("idle", "DeathmatchStage0", 24, true);
    broke.animation.play("idle");
    broke.scrollFactor.set(0.9, 0.9);

    addSprite(broke, BEHIND_ALL);

    stageFront = new FlxSprite(-320, 600).loadGraphic(hscriptPath + 'stagefront.png');
    stageFront.setGraphicSize(Std.int(stageFront.width * 1.1));
    stageFront.scrollFactor.set(0.9, 0.9);
    stageFront.antialiasing = true;
    stageFront.updateHitbox();
    addSprite(stageFront, BEHIND_ALL);

    stagecurtains = new FlxSprite(-200, -300).loadGraphic(hscriptPath + 'stagecurtains.png');
    stagecurtains.setGraphicSize(Std.int(stageFront.width * 0.9));
    stagecurtains.scrollFactor.set(1.3, 1.3);
    stagecurtains.updateHitbox();
    stagecurtains.antialiasing = true;
    addSprite(stagecurtains, BEHIND_ALL);

bgPast = new FlxSprite(-300, -200).loadGraphic(hscriptPath + 'stagebackPast.png');
    bgPast.scrollFactor.set(0.9, 0.9);
    bgPast.antialiasing = true;
    bgPast.alpha = 0.001;
    addSprite(bgPast, BEHIND_ALL);

    stageFrontPast = new FlxSprite(-320, 600).loadGraphic(hscriptPath + 'stagefrontPast.png');
    stageFrontPast.setGraphicSize(Std.int(stageFrontPast.width * 1.1));
    stageFrontPast.scrollFactor.set(0.9, 0.9);
    stageFrontPast.antialiasing = true;
    stageFrontPast.updateHitbox();
    stageFrontPast.alpha = 0.001;
    addSprite(stageFrontPast, BEHIND_ALL);

    stagecurtainsPast = new FlxSprite(-200, -300).loadGraphic(hscriptPath + 'stagecurtainsPast.png');
    stagecurtainsPast.setGraphicSize(Std.int(stageFrontPast.width * 0.9));
    stagecurtainsPast.scrollFactor.set(1.3, 1.3);
    stagecurtainsPast.updateHitbox();
    stagecurtainsPast.antialiasing = true;
    stagecurtainsPast.alpha = 0.001;
    addSprite(stagecurtainsPast, BEHIND_ALL);

    loki2 = new FlxSprite(-300, -200).makeGraphic(1280 * 2, 720 * 2, 0xFF000000);
    loki2.alpha = 1;
    loki2.cameras = [camHUD2];
    loki2.scrollFactor.set();
    add(loki2);

    loki = new FlxSprite(-300, -200).makeGraphic(1280 * 2, 720 * 2, 0xFFFFFFFF);
    loki.alpha = 0.0001;
    loki.cameras = [camHUD2];
    loki.scrollFactor.set();
    add(loki);


color = stagecurtains.color;
    setDefaultZoom(0.9);
currentPlayState.phillyLightsColors.remove(0xFF31A2FD);
currentPlayState.phillyLightsColors.remove(0xFF31FD8C);
currentPlayState.phillyLightsColors.remove(0xFFFB33F5);
currentPlayState.phillyLightsColors.remove(0xFFFBA633);
currentPlayState.glowbehind = stageFront;

}
function update(elapsed)
{
/*if (curStep == 763)
{
    FlxTween.tween(loki, {alpha: 1}, 0.4, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.1, function(tmr)
		{
   FlxTween.tween(loki, {alpha: 0}, 0.3);
		});

				}});
}

if (curStep == 1018)
{
    FlxTween.tween(loki, {alpha: 1}, 0.4, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.1, function(tmr)
		{
   FlxTween.tween(loki, {alpha: 0}, 0.3);
		});

				}});
}

if (curStep == 1403)
{
    FlxTween.tween(loki, {alpha: 1}, 0.4, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.1, function(tmr)
		{
   FlxTween.tween(loki, {alpha: 0}, 0.3);
		});

				}});
}

if (curStep == 1659)
{
    FlxTween.tween(loki, {alpha: 1}, 0.4, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.1, function(tmr)
		{
   FlxTween.tween(loki, {alpha: 0}, 0.3);
		});

				}});
}

if (curStep == 2163)
{
    FlxTween.tween(loki, {alpha: 1}, 0.9, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.1, function(tmr)
		{
   FlxTween.tween(loki, {alpha: 0}, 0.5);
		});

				}});
}

if (curStep == 2509)
{
    FlxTween.tween(loki, {alpha: 1}, 0.4, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.1, function(tmr)
		{
loki2.alpha = 1;
   FlxTween.tween(loki, {alpha: 0}, 0.4);

		});

				}});
}*/
}
function stepHit(step)
{
if (curStep == 1)
   currentPlayState.triggerEventNote('Change Character', 'dad', 'dad0');

if (curStep >= 1 && curStep <= 128)
    loki2.alpha -= 0.01;

if (curStep >= 128 && curStep == 2336)
    loki2.alpha = 0;

if (curStep ==128 || curStep ==160 || curStep ==192 || curStep == 224)
FlxG.camera.flash(0xFFFFFFFF, 1);

if (curStep == 248)
{
    FlxTween.tween(loki, {alpha: 1}, 0.4, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.2, function(tmr)
		{
   FlxTween.tween(loki, {alpha: 0}, 0.4);
    loki2.alpha = 0;
		});

				}});
}
if (curStep == 256)
   currentPlayState.triggerEventNote('Change Character', 'dad', 'dad4');

if (curStep == 1270)
{
    FlxTween.tween(loki, {alpha: 1}, 0.4, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.1, function(tmr)
		{
   FlxTween.tween(loki, {alpha: 0}, 0.4);

		});

				}});
}


if (curStep == 1530)
{
    FlxTween.tween(loki, {alpha: 1}, 0.3, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.1, function(tmr)
		{
   FlxTween.tween(loki, {alpha: 0}, 0.2);

		});

				}});
}

if (curStep == 1789)
{
    FlxTween.tween(loki, {alpha: 1}, 0.3, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.1, function(tmr)
		{
   FlxTween.tween(loki, {alpha: 0}, 0.2);

		});

				}});
}

if (curStep == 2336)
{
camHUD.alpha = 0;
    loki2.alpha = 1;
}

if (curStep >= 2368 && curStep <= 2584)
{

    loki2.alpha -= 0.01;
bgPast.alpha = 1;
stageFrontPast.alpha = 1;
stagecurtainsPast.alpha = 1;
}

if (curStep == 2586)
{

    FlxTween.tween(loki2, {alpha: 1}, 0.4, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.1, function(tmr)
		{
   FlxTween.tween(loki2, {alpha: 0}, 0.4);
camHUD.alpha = 1;
bgPast.alpha = 0;
stageFrontPast.alpha = 0;
stagecurtainsPast.alpha = 0;

		});

				}});
}

if (curStep >= 2613)
    loki2.alpha = 0;

if (curStep == 3741)
{
    FlxTween.tween(loki, {alpha: 1}, 0.9, {ease: FlxEase.quadInOut, onComplete:
				function (twn) {
new FlxTimer().start(0.1, function(tmr)
		{
   FlxTween.tween(loki, {alpha: 0}, 0.6);
		});

				}});
}
}
function onEvent(name, value1, value2, value3)
{
switch(name){
case 'Philly Glow':
if (value1 == '1')
stagecurtains.color = currentPlayState.phillyLightsColors[currentPlayState.curLightEvent];
else if (value1 == '0')
stagecurtains.color = color;
   }
}