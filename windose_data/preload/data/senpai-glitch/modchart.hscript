//Notetype Change(Beta)

function start(song) {
 
}

function onCreate(song) {
  
 
}
function beatHit(beat)
{


}

var backed = false;
var goTothehell = false;
function update(elapsed)
{
 /* */if (PlayState.isCorruptUI){
  if (!goTothehell){
changeStrumsWithNotesSkin('NOTE_assets', '', 1, true);
changeStrumsWithNotesSkin('NOTE_assets', '', 0, true);
currentPlayState.changeNewUI('normal');
backed = true;
goTothehell = true;
  }
  }
  else if (!PlayState.isCorruptUI){
    if (backed){
    changeStrumsWithNotesSkin('OGNOTE_assets', '',1, true);
    changeStrumsWithNotesSkin('OGNOTE_assets', '',0, true);
    currentPlayState.changeNewUI('realnormal');
    backed = false;
    goTothehell = false;
    }
  }

  for (daNote in currentPlayState.notes){
    if (daNote.isSustainNote && daNote.isPixelNote){


daNote.scale.y*= Conductor.stepCrochet / 100 * 1.05;
daNote.scale.y *= 1.19;

daNote.scale.y *= (6 / daNote.height);
daNote.resizeByRatio(PlayState.instance.songSpeed);


daNote.updateHitbox();
daNote.scale.y *=  PlayState.daPixelZoom;
daNote.offsetX = 30;
daNote.updateHitbox();
daNote.y += 8 + (6 - daNote.originalHeightForCalcs) * PlayState.daPixelZoom;
    }

  }

  for (daNote in currentPlayState.unspawnNotes){
    if (daNote.isSustainNote && daNote.isPixelNote){


daNote.scale.y*= Conductor.stepCrochet / 100 * 1.05;
daNote.scale.y *= 1.19;

daNote.scale.y *= (6 / daNote.height);
daNote.resizeByRatio(PlayState.instance.songSpeed);


daNote.updateHitbox();
daNote.scale.y *=  PlayState.daPixelZoom;
daNote.offsetX = 30;
daNote.updateHitbox();
daNote.y += 8 + (6 - daNote.originalHeightForCalcs) * PlayState.daPixelZoom;
    }

  }
}

function stepHit(step)
{


}

function opponentTurn()
{
}

function opponentNoteHit(id, direction, noteType, isSustainNote, note)
{
}

function playerTurn()
{
}

function noteMiss(id, direction, noteType, isSustainNote, note)
{

}

function goodNoteHit(id, direction, noteType, isSustainNote, note)
{

}
function onEvent(name, value1, value2, value3)
  {
  switch(name){
  case 'Change Character':
  if(value1 == '0' && value2 == 'bf-pixel-D1'){
goTothehell = true;
  }
  
  if(value1 == '0' && value2 == 'bf-pixel'){
    goTothehell = false;
  }
  

     }
  }
var noteY = 50;
var tween = [];
function changeFullNotesSkin(texture, prefix, funnidirection, isPixel)
  {
  
  
   
    if(texture == null || texture == '') texture = 'NOTE_assets';
    if(prefix == null || prefix == '') prefix = '';
  if (funnidirection < 8){
  
  currentPlayState.strumLineNotes.members[funnidirection].isPixelNote = isPixel;
    currentPlayState.strumLineNotes.members[funnidirection].texture = texture;
    
  
    for (daNote in currentPlayState.notes){
      
        
  if (funnidirection < 4){
          if (!daNote.mustPress && daNote.noteData == funnidirection)
          {
            daNote.isPixelNote = isPixel;
            if (daNote.noteType == '')
            daNote.reloadNote(prefix, texture);
  
                  
          }
      }
      else
        {
          if (daNote.mustPress && daNote.noteData == funnidirection - 4)
            {
            
              daNote.isPixelNote = isPixel;
              if (daNote.noteType == '')
                daNote.reloadNote(prefix, texture);
  
            }   
        }
        if (daNote.noteType != '')
          setnoteType();  
    }
    for (daNote in currentPlayState.unspawnNotes){
      
        
      if (funnidirection < 4){
              if (!daNote.mustPress && daNote.noteData == funnidirection)
              {
                daNote.isPixelNote = isPixel;
                if (daNote.noteType == '')
                daNote.reloadNote(prefix, texture);
      
                      
              }
          }
          else
            {
              if (daNote.mustPress && daNote.noteData == funnidirection - 4)
                {
                
                  daNote.isPixelNote = isPixel;
                  if (daNote.noteType == '')
                    daNote.reloadNote(prefix, texture);
      
                }   
            }
            if (daNote.noteType != '')
              setnoteType();  
        }
  }
  else
  {
    for (i in 0...currentPlayState.strumLineNotes.length) {
  currentPlayState.strumLineNotes.members[i].isPixelNote = isPixel;
    currentPlayState.strumLineNotes.members[i].texture = texture;
    
  }
    for (daNote in currentPlayState.notes)
      {
       
        daNote.isPixelNote = isPixel;
        if (daNote.noteType == '')
        daNote.reloadNote(prefix, texture);
  
        if (daNote.noteType != '')
          setnoteType();  
      }
      for (daNote in currentPlayState.unspawnNotes)
        {
         
          daNote.isPixelNote = isPixel;
          if (daNote.noteType == '')
          daNote.reloadNote(prefix, texture);
    
          if (daNote.noteType != '')
            setnoteType();  
        }
  }
  }
  
  function changeStrumNotesSkin(texture, funnidirection, isPixel)
    {
      if(texture == null || texture == '') texture = 'NOTE_assets';
    
    if (funnidirection < 8){
  
    currentPlayState.strumLineNotes.members[funnidirection].isPixelNote = isPixel;
      currentPlayState.strumLineNotes.members[funnidirection].texture = texture;
    
  }
    else
    {
      for (i in 0...currentPlayState.strumLineNotes.length) {
      
    currentPlayState.strumLineNotes.members[i].isPixelNote = isPixel;
      currentPlayState.strumLineNotes.members[i].texture = texture;
    
    
    }
    }
    }
  
  function changeNotesSkin(texture, prefix, funnidirection, isPixel)
    {
      if(texture == null || texture == '') texture = 'NOTE_assets';
      if(prefix == null || prefix == '') prefix = '';
    if (funnidirection < 8){
    
      for (daNote in currentPlayState.notes){
    if (funnidirection < 4){
            if (!daNote.mustPress && daNote.noteData == funnidirection)
            {
  
  
              daNote.isPixelNote = isPixel;
              if (daNote.noteType == '')
              daNote.reloadNote(prefix, texture);
  
            }
        }
        else
          {
            if (daNote.mustPress && daNote.noteData == funnidirection - 4)
              {
  
                daNote.isPixelNote = isPixel;
                if (daNote.noteType == '')
                daNote.reloadNote(prefix, texture);
  
              }   
          }
          if (daNote.noteType != '')
            setnoteType();  
      }
      for (daNote in currentPlayState.unspawnNotes){
        if (funnidirection < 4){
                if (!daNote.mustPress && daNote.noteData == funnidirection)
                {
      
      
                  daNote.isPixelNote = isPixel;
                  if (daNote.noteType == '')
                  daNote.reloadNote(prefix, texture);
      
                }
            }
            else
              {
                if (daNote.mustPress && daNote.noteData == funnidirection - 4)
                  {
      
                    daNote.isPixelNote = isPixel;
                    if (daNote.noteType == '')
                    daNote.reloadNote(prefix, texture);
      
                  }   
              }
              if (daNote.noteType != '')
                setnoteType();  
          }
    }
    else
    {
  
      for (daNote in currentPlayState.notes)
        {
  
          daNote.isPixelNote = isPixel;
          if (daNote.noteType == '')
          daNote.reloadNote(prefix, texture);
  
          if (daNote.noteType != '')
            setnoteType();  
        }
        for (daNote in currentPlayState.unspawnNotes)
          {
    
            daNote.isPixelNote = isPixel;
            if (daNote.noteType == '')
            daNote.reloadNote(prefix, texture);
    
            if (daNote.noteType != '')
              setnoteType();  
          }
    }
    
    }
  
    function setnoteType()
      {
        for (daNote in currentPlayState.notes)
          {
            if(daNote.noteData > -1 && daNote.noteType != '') {
              switch(daNote.noteType) {
                case 'Hurt Note':
                  daNote.reloadNote('HURT');
                  case 'Death Note':
                    daNote.reloadNote('NUKE');
                case 'Alt Animation':
                  daNote.reloadNote('');
                case 'No Animation':
                  daNote.reloadNote('');
                case 'GF Sing':
                  daNote.reloadNote('');
                case 'Both Sing':
                  daNote.reloadNote('');
                case 'Drain Note':
                  daNote.reloadNote('');
        
                case 'Warning Note':
                 
                  daNote.reloadNote('WARNING');
                case 'Static Note':
                  daNote.reloadNote('STATIC');
              }
  
            }
    }
    for (daNote in currentPlayState.unspawnNotes)
      {
        if(daNote.noteData > -1 && daNote.noteType != '') {
          switch(daNote.noteType) {
            case 'Hurt Note':
              daNote.reloadNote('HURT');
              case 'Death Note':
                daNote.reloadNote('NUKE');
            case 'Alt Animation':
              daNote.reloadNote('');
            case 'No Animation':
              daNote.reloadNote('');
            case 'GF Sing':
              daNote.reloadNote('');
            case 'Both Sing':
              daNote.reloadNote('');
            case 'Drain Note':
              daNote.reloadNote('');
    
            case 'Warning Note':
             
              daNote.reloadNote('WARNING');
            case 'Static Note':
              daNote.reloadNote('STATIC');
          }

        }
}
      }
  
  function changeStrumsWithNotesSkin(texture, prefix, strums, isPixel)
    {
      if(texture == null || texture == '') texture = 'NOTE_assets';
      if(prefix == null || prefix == '') prefix = '';
  if (strums == 0){
   changeFullNotesSkin(texture, prefix, 0, isPixel);
   changeFullNotesSkin(texture, prefix, 1, isPixel);
   changeFullNotesSkin(texture, prefix, 2, isPixel);
   changeFullNotesSkin(texture, prefix, 3, isPixel);
  }else if (strums == 1){
   changeFullNotesSkin(texture, prefix, 4, isPixel);
   changeFullNotesSkin(texture, prefix, 5, isPixel);
   changeFullNotesSkin(texture, prefix, 6, isPixel);
   changeFullNotesSkin(texture, prefix, 7, isPixel);
  }
    
    }
  
  function changeAllNotesSkin(texture, prefix, strums, isPixel)
    {
  //NO MORE.....
      if(texture == null || texture == '') texture = 'NOTE_assets';
      if(prefix == null || prefix == '') prefix = '';
  if (strums == 0){
  changeNotesSkin(texture, prefix, 0, isPixel);
  changeNotesSkin(texture, prefix, 1, isPixel);
  changeNotesSkin(texture, prefix, 2, isPixel);
  changeNotesSkin(texture, prefix, 3, isPixel);
  }else if (strums == 1){
  changeNotesSkin(texture, prefix, 4, isPixel);
  changeNotesSkin(texture, prefix, 5, isPixel);
  changeNotesSkin(texture, prefix, 6, isPixel);
  changeNotesSkin(texture, prefix, 7, isPixel);
  }
    
    }
  
  function changeAllStrumsNotesSkin(texture, strums, isPixel)
    {
      if(texture == null || texture == '') texture = 'NOTE_assets';
      if(prefix == null || prefix == '') prefix = '';
  if (strums == 0){
  changeStrumNotesSkin(texture, 0, isPixel);
  changeStrumNotesSkin(texture, 1, isPixel);
  changeStrumNotesSkin(texture, 2, isPixel);
  changeStrumNotesSkin(texture, 3, isPixel);
  }else if (strums == 1){
  changeStrumNotesSkin(texture, 4, isPixel);
  changeStrumNotesSkin(texture, 5, isPixel);
  changeStrumNotesSkin(texture, 6, isPixel);
  changeStrumNotesSkin(texture, 7, isPixel);
  }
    
    }
  